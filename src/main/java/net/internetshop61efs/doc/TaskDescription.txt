Написать прилодение для:
- регистрации пользователей
- поджтверждения регистрации
- получение информации о пользователе
(полную инфломацию для администратора и сокращенную (профиль юзера) для пользователя)
- поиск по id, email

------------------------------------------------------

Для хранения данных о пользователе создадим класс User
- id
- firstName
- lastName
- email
- hashPassword
- role
- status
- photoLink -> будет хранится путь (ссылка) на файл (аватар, фото) связанный с этим пользователем

enum Role: ADMIN, USER, MANAGER

enum Status: NOT_CONFIRM, CONFIRMED, BANNED, DELETE

Для хранения данных о коде подтверждения (confirmation code) создадим класс
ConfirmationCode:
- id
- code
- user
- expiredDateTime
- isConfirmed

Новый пользователь проходит процедуру регистрации, вводит свои данные.
Если данные - корректные, то мы:
- регистрируем пользователя (то есть заносим его данные в БД)
- генерируем ноый уникальный код подтверждения и отправляем ему на почту

Пользователь переходит по ссылке из письма, то есть тем самым отправлет
на наш сервер get-запрос на определенный путь, который мы обрабатываем.
Мы проверяем, что код подтверждения, который содержится в строке запроса:
- во-первых, существует (то есть мы его создали и кому-то отправили)
- во-вторых, он действительный (то есть его "срок действия" еще не истек)

По этому коду находим пользователя  для которого мы этот код создавали
и у него меняем статус на CONFIRMED

Для хранения данных о "фото" пользователя (а их может быть несколько
для одного пользователя) - создадим класс FileInfo.

FileInfo:
- id
- link
- user -> пользоваетель, к которому эта картинка относится


------------------------------------------------------

API description:


UserController:

//* добавить нового пользователя
public UserResponseDto addNewUser(UserRequestDto request);

//* найти всех пользователей (полная информация для ADMIN)
public List<User> findAllFullDetailed();

//* найти всех пользователей (ограниченная информация для USER)
public List<UserResponseDto> findAll();

//* найти пользователя по ID
public UserResponseDto findUserById(Integer id);

//* найти пользователя по email
public UserResponseDto findUserByEmail(String email);

//* найти всех пользователей по имени
public List<UserResponseDto> findUserByLastName(String lastName);

//* обновить данные о пользователе (пользователь сам хочет поменять
какие-то данные в своем профиле)
public UserResponseDto updateUser(UserUpdateRequestDto request);

как можно сделать update:
1 вариант - метод get через командную строку - указать параметр в котором передать новое значение
localhost:8080/api/update?lastname=...&password=...

2 вариант - метод post с использованием dto
когда мы получаем такой запрос, то из тела запроса данные попадают в UserUpdateRequestDto
и если в этом объекте КАКОЕ-ТО поле присутсвует и его значение удовлетворяет требованиям
валидации (корректное), то мы должны заменить в нашем пользователе значение этого поля на новое


//* удаление записи о пользователе


CodeConfirmationController

// заново запросить код подтверждения для существующего пользователя
// запрос будет производиться через get-запрос с использованием параметра
// в строке запроса; localhost:8080/api/code/renew?email=...

public boolean codeRenew(String email);

// подтверждение почты через получение кода регистрации

public boolean confirmationEmail(String codeConfirmation);





